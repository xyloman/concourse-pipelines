jobs:
- name: regulator
  plan:
  - get: schedule
    trigger: true
  - get: ((product_slug))
    params:
      globs: []

- name: sandbox
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        config: {<<: *unpack-tarball-params}
    - get: pivnet-product
      passed: [regulator]
      trigger: true
      resource: ((product_slug))
      params:
        globs: ['*pivotal']
  - task: wait-opsman-clear
    file: pcf-pipelines/tasks/wait-opsman-clear/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((foundations.sandbox.opsman.domain_or_ip_address))
      OPSMAN_PASSWORD: ((foundations.sandbox.opsman.admin.password))
      OPSMAN_USERNAME: ((foundations.sandbox.opsman.admin.username))
  - task: upload-tile-and-stemcell
    file: pcf-pipelines/tasks/upload-product-and-stemcell/task.yml
    params:
      IAAS: ((foundations.sandbox.iaas_type))
      NO_PROXY: ""
      OM_IP: ""
      OPS_MGR_PWD: ((foundations.sandbox.opsman.admin.password))
      OPS_MGR_USR: ((foundations.sandbox.opsman.admin.username))
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((foundations.sandbox.opsman.domain_or_ip_address))
      PIVNET_API_TOKEN: ((pivnet_token))
  - task: stage-and-apply-updates
    file: pcf-pipelines/tasks/stage-and-apply-updates/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((foundations.sandbox.opsman.domain_or_ip_address))
      OPSMAN_PASSWORD: ((foundations.sandbox.opsman.admin.password))
      OPSMAN_USERNAME: ((foundations.sandbox.opsman.admin.username))

- name: non-prod
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        config: { <<: *unpack-tarball-params }
    - get: pivnet-product
      passed: [sandbox]
      resource: ((product_slug))
      params:
        globs: ['*pivotal']
  - task: wait-opsman-clear
    file: pcf-pipelines/tasks/wait-opsman-clear/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((foundations.non-prod.opsman.domain_or_ip_address))
      OPSMAN_PASSWORD: ((foundations.non-prod.opsman.admin.password))
      OPSMAN_USERNAME: ((foundations.non-prod.opsman.admin.username))
  - task: upload-tile-and-stemcell
    file: pcf-pipelines/tasks/upload-product-and-stemcell/task.yml
    params:
      IAAS: ((foundations.non-prod.iaas_type))
      NO_PROXY: ""
      OM_IP: ""
      OPS_MGR_PWD: ((foundations.non-prod.opsman.admin.password))
      OPS_MGR_USR: ((foundations.non-prod.opsman.admin.username))
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((foundations.non-prod.opsman.domain_or_ip_address))
      PIVNET_API_TOKEN: ((pivnet_token))
  - task: stage-and-apply-updates
    file: pcf-pipelines/tasks/stage-and-apply-updates/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((foundations.non-prod.opsman.domain_or_ip_address))
      OPSMAN_PASSWORD: ((foundations.non-prod.opsman.admin.password))
      OPSMAN_USERNAME: ((foundations.non-prod.opsman.admin.username))

- name: prod
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        config: { <<: *unpack-tarball-params }
    - get: pivnet-product
      passed: [non-prod]
      resource: ((product_slug))
      params:
        globs: ['*pivotal']
  - task: wait-opsman-clear
    file: pcf-pipelines/tasks/wait-opsman-clear/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((foundations.prod.opsman.domain_or_ip_address))
      OPSMAN_PASSWORD: ((foundations.prod.opsman.admin.password))
      OPSMAN_USERNAME: ((foundations.prod.opsman.admin.username))
  - task: upload-tile-and-stemcell
    file: pcf-pipelines/tasks/upload-product-and-stemcell/task.yml
    params:
      IAAS: ((foundations.prod.iaas_type))
      NO_PROXY: ""
      OM_IP: ""
      OPS_MGR_PWD: ((foundations.prod.opsman.admin.password))
      OPS_MGR_USR: ((foundations.prod.opsman.admin.username))
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((foundations.prod.opsman.domain_or_ip_address))
      PIVNET_API_TOKEN: ((pivnet_token))
  - task: stage-and-apply-updates
    file: pcf-pipelines/tasks/stage-and-apply-updates/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((foundations.prod.opsman.domain_or_ip_address))
      OPSMAN_PASSWORD: ((foundations.prod.opsman.admin.password))
      OPSMAN_USERNAME: ((foundations.prod.opsman.admin.username))

resources:
- name: pcf-pipelines-tarball
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: pcf-automation
    product_version: ((pcf-automation-version))

- name: ((product_slug))
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((product_slug))
    product_version: ((product_version_regex))
    sort_by: semver

- name: schedule
  type: time
  source:
    days: [ Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday ]
    interval: 30m
    location: America/Los_Angeles
    start: 12:00 AM
    stop: 11:59 PM

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final


unpack-tarball-params: &unpack-tarball-params
  platform: linux
  image_resource:
    type: docker-image
    source:
      repository: czero/cflinuxfs2
  run:
    path: bash
    args:
    - -c
    - tar -xvf pcf-pipelines-tarball/*.tgz
    dir: ""
  inputs:
  - name: pcf-pipelines-tarball
    path: ""
  outputs:
  - name: pcf-pipelines
    path: ""